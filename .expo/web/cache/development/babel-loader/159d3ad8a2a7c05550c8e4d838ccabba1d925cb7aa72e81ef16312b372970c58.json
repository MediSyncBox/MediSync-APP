{"ast":null,"code":"var _jsxFileName = \"E:\\\\MediSyncApp\\\\medi-expo\\\\App.js\";\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport * as React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HomeScreen() {\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsxDEV(Text, {\n      children: \"Home!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\nfunction SettingsScreen() {\n  return _jsxDEV(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    children: _jsxDEV(Text, {\n      children: \"Settings!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n  return _jsxDEV(NavigationContainer, {\n    children: _jsxDEV(Tab.Navigator, {\n      screenOptions: function screenOptions(_ref) {\n        var route = _ref.route;\n        return {\n          tabBarIcon: function tabBarIcon(_ref2) {\n            var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n            var iconName;\n            if (route.name === 'Home') {\n              iconName = focused ? 'ios-information-circle' : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n            return _jsxDEV(Ionicons, {\n              name: iconName,\n              size: size,\n              color: color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 20\n            }, _this);\n          }\n        };\n      },\n      tabBarOptions: {\n        activeTintColor: 'tomato',\n        inactiveTintColor: 'gray'\n      },\n      children: [_jsxDEV(Tab.Screen, {\n        name: \"Home\",\n        component: HomeScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), _jsxDEV(Tab.Screen, {\n        name: \"Settings\",\n        component: SettingsScreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"names":["Ionicons","React","Text","View","NavigationContainer","createBottomTabNavigator","jsxDEV","_jsxDEV","HomeScreen","style","flex","justifyContent","alignItems","children","fileName","_jsxFileName","lineNumber","columnNumber","SettingsScreen","Tab","App","_this","Navigator","screenOptions","_ref","route","tabBarIcon","_ref2","focused","color","size","iconName","name","tabBarOptions","activeTintColor","inactiveTintColor","Screen","component"],"sources":["E:/MediSyncApp/medi-expo/App.js"],"sourcesContent":["import Ionicons from 'react-native-vector-icons/Ionicons';\nimport * as React from 'react';\nimport { Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\nconst Tab = createBottomTabNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Tab.Navigator\n        screenOptions={({ route }) => ({\n          tabBarIcon: ({ focused, color, size }) => {\n            let iconName;\n\n            if (route.name === 'Home') {\n              iconName = focused\n                ? 'ios-information-circle'\n                : 'ios-information-circle-outline';\n            } else if (route.name === 'Settings') {\n              iconName = focused ? 'ios-list-box' : 'ios-list';\n            }\n\n            // You can return any component that you like here!\n            return <Ionicons name={iconName} size={size} color={color} />;\n          },\n        })}\n        tabBarOptions={{\n          activeTintColor: 'tomato',\n          inactiveTintColor: 'gray',\n        }}\n      >\n        <Tab.Screen name=\"Home\" component={HomeScreen} />\n        <Tab.Screen name=\"Settings\" component={SettingsScreen} />\n      </Tab.Navigator>\n    </NavigationContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}